{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./ejson","imported":["EJSON"],"specifiers":[{"kind":"named","imported":"EJSON","local":"EJSON"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/ejson/custom_models_for_tests.js","filenameRelative":"packages/ejson/custom_models_for_tests.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ejson/custom_models_for_tests.js.map","sourceFileName":"packages/ejson/custom_models_for_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"custom_models_for_tests"},"ignored":false,"code":"let EJSON;\nmodule.watch(require(\"./ejson\"), {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\n\nclass Address {\n  constructor(city, state) {\n    this.city = city;\n    this.state = state;\n  }\n\n  typeName() {\n    return 'Address';\n  }\n\n  toJSONValue() {\n    return {\n      city: this.city,\n      state: this.state\n    };\n  }\n\n}\n\nEJSON.addType('Address', value => new Address(value.city, value.state));\n\nclass Person {\n  constructor(name, dob, address) {\n    this.name = name;\n    this.dob = dob;\n    this.address = address;\n  }\n\n  typeName() {\n    return 'Person';\n  }\n\n  toJSONValue() {\n    return {\n      name: this.name,\n      dob: EJSON.toJSONValue(this.dob),\n      address: EJSON.toJSONValue(this.address)\n    };\n  }\n\n}\n\nEJSON.addType('Person', value => new Person(value.name, EJSON.fromJSONValue(value.dob), EJSON.fromJSONValue(value.address)));\n\nclass Holder {\n  constructor(content) {\n    this.content = content;\n  }\n\n  typeName() {\n    return 'Holder';\n  }\n\n  toJSONValue() {\n    return this.content;\n  }\n\n}\n\nEJSON.addType('Holder', value => new Holder(value));\nconst EJSONTest = {\n  Address,\n  Person,\n  Holder\n};\nmodule.exportDefault(EJSONTest);","map":{"version":3,"sources":["packages/ejson/custom_models_for_tests.js"],"names":["EJSON","module","watch","require","v","Address","constructor","city","state","typeName","toJSONValue","addType","value","Person","name","dob","address","fromJSONValue","Holder","content","EJSONTest","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAACH,QAAMI,CAAN,EAAQ;AAACJ,YAAMI,CAAN;AAAQ;;AAAlB,CAAhC,EAAoD,CAApD;;AAEV,MAAMC,OAAN,CAAc;AACZC,cAAYC,IAAZ,EAAkBC,KAAlB,EAAyB;AACvB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEDC,aAAW;AACT,WAAO,SAAP;AACD;;AAEDC,gBAAc;AACZ,WAAO;AACLH,YAAM,KAAKA,IADN;AAELC,aAAO,KAAKA;AAFP,KAAP;AAID;;AAfW;;AAkBdR,MAAMW,OAAN,CAAc,SAAd,EAAyBC,SAAS,IAAIP,OAAJ,CAAYO,MAAML,IAAlB,EAAwBK,MAAMJ,KAA9B,CAAlC;;AAEA,MAAMK,MAAN,CAAa;AACXP,cAAYQ,IAAZ,EAAkBC,GAAlB,EAAuBC,OAAvB,EAAgC;AAC9B,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;;AAEDP,aAAW;AACT,WAAO,QAAP;AACD;;AAEDC,gBAAc;AACZ,WAAO;AACLI,YAAM,KAAKA,IADN;AAELC,WAAKf,MAAMU,WAAN,CAAkB,KAAKK,GAAvB,CAFA;AAGLC,eAAShB,MAAMU,WAAN,CAAkB,KAAKM,OAAvB;AAHJ,KAAP;AAKD;;AAjBU;;AAoBbhB,MAAMW,OAAN,CACE,QADF,EAEEC,SAAS,IAAIC,MAAJ,CACPD,MAAME,IADC,EAEPd,MAAMiB,aAAN,CAAoBL,MAAMG,GAA1B,CAFO,EAGPf,MAAMiB,aAAN,CAAoBL,MAAMI,OAA1B,CAHO,CAFX;;AASA,MAAME,MAAN,CAAa;AACXZ,cAAYa,OAAZ,EAAqB;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDV,aAAW;AACT,WAAO,QAAP;AACD;;AAEDC,gBAAc;AACZ,WAAO,KAAKS,OAAZ;AACD;;AAXU;;AAcbnB,MAAMW,OAAN,CAAc,QAAd,EAAwBC,SAAS,IAAIM,MAAJ,CAAWN,KAAX,CAAjC;AAEA,MAAMQ,YAAY;AAChBf,SADgB;AAEhBQ,QAFgB;AAGhBK;AAHgB,CAAlB;AAnEAjB,OAAOoB,aAAP,CAyEeD,SAzEf","file":"packages/ejson/custom_models_for_tests.js.map","sourcesContent":["import { EJSON } from './ejson';\n\nclass Address {\n  constructor(city, state) {\n    this.city = city;\n    this.state = state;\n  }\n\n  typeName() {\n    return 'Address';\n  }\n\n  toJSONValue() {\n    return {\n      city: this.city,\n      state: this.state,\n    };\n  }\n}\n\nEJSON.addType('Address', value => new Address(value.city, value.state));\n\nclass Person {\n  constructor(name, dob, address) {\n    this.name = name;\n    this.dob = dob;\n    this.address = address;\n  }\n\n  typeName() {\n    return 'Person';\n  }\n\n  toJSONValue() {\n    return {\n      name: this.name,\n      dob: EJSON.toJSONValue(this.dob),\n      address: EJSON.toJSONValue(this.address),\n    };\n  }\n}\n\nEJSON.addType(\n  'Person',\n  value => new Person(\n    value.name,\n    EJSON.fromJSONValue(value.dob),\n    EJSON.fromJSONValue(value.address)\n  )\n);\n\nclass Holder {\n  constructor(content) {\n    this.content = content;\n  }\n\n  typeName() {\n    return 'Holder';\n  }\n\n  toJSONValue() {\n    return this.content;\n  }\n}\n\nEJSON.addType('Holder', value => new Holder(value));\n\nconst EJSONTest = {\n  Address,\n  Person,\n  Holder,\n};\n\nexport default EJSONTest;\n"]},"hash":"62710cd1ee18354e415f3492719482955e7064dc"}
