{"version":3,"sources":["meteor://ðŸ’»app/packages/aldeed:schema-deny/deny.js"],"names":["SimpleSchema","module","watch","require","v","Collection2","extendOptions","on","collection","ss","version","messageBox","messages","en","insertNotAllowed","updateNotAllowed","addValidator","isSet","def","definition","denyInsert","isInsert","denyUpdate","isUpdate","isUpsert"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,qBAAJ;AAAiBC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAAA,uBAASC,CAAT,EAAW;AAACJ,mBAAaI,CAAb;AAAe;AAA3B,CAArC,EAAkE,CAAlE;AAAqE,IAAIC,oBAAJ;AAAgBJ,OAAOC,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAAA,uBAASC,CAAT,EAAW;AAACC,kBAAYD,CAAZ;AAAc;AAA1B,CAAvD,EAAmF,CAAnF;AAItG;AACAJ,aAAaM,aAAb,CAA2B,CAAC,YAAD,EAAe,YAAf,CAA3B;AAEAD,YAAYE,EAAZ,CAAe,iBAAf,EAAkC,UAAUC,UAAV,EAAsBC,EAAtB,EAA0B;AAC1D,MAAIA,GAAGC,OAAH,IAAc,CAAd,IAAmBD,GAAGE,UAAtB,IAAoC,OAAOF,GAAGE,UAAH,CAAcC,QAArB,KAAkC,UAA1E,EAAsF;AACpFH,OAAGE,UAAH,CAAcC,QAAd,CAAuB;AACrBC,UAAI;AACFC,0BAAkB,2CADhB;AAEFC,0BAAkB;AAFhB;AADiB,KAAvB;AAMD;;AAEDN,KAAGO,YAAH,CAAgB,YAAW;AACzB,QAAI,CAAC,KAAKC,KAAV,EAAiB;AAEjB,QAAMC,MAAM,KAAKC,UAAjB;AAEA,QAAID,IAAIE,UAAJ,IAAkB,KAAKC,QAA3B,EAAqC,OAAO,kBAAP;AACrC,QAAIH,IAAII,UAAJ,KAAmB,KAAKC,QAAL,IAAiB,KAAKC,QAAzC,CAAJ,EAAwD,OAAO,kBAAP;AACzD,GAPD;AAQD,CAlBD,8F","file":"/packages/aldeed_schema-deny.js","sourcesContent":["// collection2-core checks to make sure that simpl-schema package is added\nimport SimpleSchema from 'simpl-schema';\nimport Collection2 from 'meteor/aldeed:collection2-core';\n\n// Extend the schema options allowed by SimpleSchema\nSimpleSchema.extendOptions(['denyInsert', 'denyUpdate']);\n\nCollection2.on('schema.attached', function (collection, ss) {\n  if (ss.version >= 2 && ss.messageBox && typeof ss.messageBox.messages === 'function') {\n    ss.messageBox.messages({\n      en: {\n        insertNotAllowed: '{{label}} cannot be set during an insert.',\n        updateNotAllowed: '{{label}} cannot be set during an update.'\n      }\n    });\n  }\n\n  ss.addValidator(function() {\n    if (!this.isSet) return;\n\n    const def = this.definition;\n\n    if (def.denyInsert && this.isInsert) return 'insertNotAllowed';\n    if (def.denyUpdate && (this.isUpdate || this.isUpsert)) return 'updateNotAllowed';\n  });\n});\n"]}