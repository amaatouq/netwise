{"version":3,"sources":["meteor://ðŸ’»app/imports/ui/games/task/Context.jsx","meteor://ðŸ’»app/imports/ui/games/task/GameTemp.jsx","meteor://ðŸ’»app/imports/ui/games/task/Round.jsx","meteor://ðŸ’»app/imports/ui/games/task/Social.jsx","meteor://ðŸ’»app/imports/ui/games/task/Task.jsx","meteor://ðŸ’»app/imports/ui/games/task/game.js","meteor://ðŸ’»app/imports/ui/games/task/init.js","meteor://ðŸ’»app/imports/startup/both/index.js","meteor://ðŸ’»app/imports/startup/client/index.js","meteor://ðŸ’»app/imports/startup/client/routes.js","meteor://ðŸ’»app/client/main.js"],"names":["module","export","Context","PropTypes","watch","require","v","React","stringToColour","hash","i","str","length","charCodeAt","colour","value","toString","substr","render","props","score","currentPlayerID","backgroundColor","Component","propTypes","string","number","remainingTime","GameTemp","Random","stages","Round","choice","_","random","id","round","element","Social","Task","stage","currentPlayer","isRequired","oneOf","shape","otherPlayers","arrayOf","initGame","game","console","log","computeResponse","avatars","taskData","input","correctAnswer","getNeighbors","a","players","treatment","rounds","taskIndexes","shuffle","range","times","push","data","taskIndex","randomNumber","forEach","neighbors","player","avatar","responseData","reponse","state","set","response","sum","get","task","allMyTasks","scoreFunction","correct_answer","renderRoutes","Route","Router","createBrowserHistory","browserHistory","Meteor","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst stringToColour = str => {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  var colour = \"#\";\n  for (var i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 0xff;\n    colour += (\"00\" + value.toString(16)).substr(-2);\n  }\n  return colour;\n};\n\nexport default class Context extends React.Component {\n  render() {\n    const { score, currentPlayerID } = this.props;\n\n    return (\n      <aside className=\"context\">\n        <h3>You Profile</h3>\n\n        {currentPlayerID ? (\n          <div\n            className=\"player-icon\"\n            style={{ backgroundColor: stringToColour(currentPlayerID) }}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {score || score === 0 ? (\n          <div className=\"score\">\n            <h4>Total score</h4>\n            <span>{score}</span>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {/* Ignoring timer for now */}\n      </aside>\n    );\n  }\n}\n\nContext.propTypes = {\n  // Current player's identifier (used to display a user profile icon)\n  currentPlayerID: PropTypes.string,\n\n  // Current player's score\n  score: PropTypes.number,\n\n  // Remaining time to complete task in seconds\n  remainingTime: PropTypes.number\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { Random } from \"meteor/random\";\n\nimport { stages } from \"./game\";\nimport Round from \"./Round\";\n\nexport default class GameTemp extends React.Component {\n  render() {\n    return (\n      <div className=\"game game-temp\">\n        <Round\n          stage={Random.choice(stages)}\n          round={_.random(0, 9)}\n          score={_.random(0, 123)}\n          currentPlayer={{ id: Random.id() }}\n        />\n      </div>\n    );\n  }\n}\n\nGameTemp.propTypes = {\n  // This is not how we're doing it yet. For now, we just do thing statically,\n  // but later the Round gets built dynamically by Netwise and is passed into\n  // the root game Component (GameTemp here) for the oppertunity to set\n  // overall game UI (progress, CSS namespacing, etc.)\n  round: PropTypes.element\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { stages } from \"./game\";\nimport Context from \"./Context\";\nimport Social from \"./Social\";\nimport Task from \"./Task\";\n\nexport default class Round extends React.Component {\n  render() {\n    const { round, stage, score, currentPlayer, remainingTime } = this.props;\n    return (\n      <div className=\"round round-plot\">\n        <Context\n          currentPlayerID={currentPlayer.id}\n          score={score}\n          remainingTime={remainingTime}\n        />\n        <Task round={round} stage={stage} />\n        {stage === \"social\" ? <Social round={round} /> : \"\"}\n      </div>\n    );\n  }\n}\n\nRound.propTypes = {\n  // Current round index\n  round: PropTypes.number.isRequired,\n\n  // Current stage\n  stage: PropTypes.oneOf(stages).isRequired,\n\n  // Current player\n  currentPlayer: PropTypes.shape({\n    id: PropTypes.string.isRequired\n  }).isRequired,\n\n  // Current player's score\n  score: PropTypes.number.isRequired,\n\n  // Remaining time to complete task in seconds\n  remainingTime: PropTypes.number,\n\n  // Other player participating in this game\n  otherPlayers: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  )\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport default class Social extends React.Component {\n  render() {\n    const { round } = this.props;\n    return <div className=\"social\">Social at round {round}</div>;\n  }\n}\n\nSocial.propTypes = {\n  // Current round index\n  round: PropTypes.number.isRequired\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { stages } from \"./game\";\n\nexport default class Task extends React.Component {\n  render() {\n    const { round, stage } = this.props;\n\n    // const plots = gameInstance.get(\"plots\");\n    // const plot = plots[round];\n\n    return (\n      <div className=\"task\">\n        Task for Round {round} at stage {stage}\n      </div>\n    );\n  }\n}\n\nTask.propTypes = {\n  // Current round index\n  round: PropTypes.number.isRequired,\n\n  // Current stage\n  stage: PropTypes.oneOf(stages).isRequired\n};\n","import { initGame } from \"./init\";\n\nexport const stages = [\"response\", \"interactive\", \"social\"];\n\nconst game = initGame([], \"\");\nconsole.log(game);\n","const avatars = [\"a\", \"b\", \"c\"];\nconst taskData = [\n  { input: 1, correctAnswer: 1 },\n  { input: 8, correctAnswer: 8 },\n  { input: 2, correctAnswer: 2 }\n];\n\nconst stages = [\"initial\", \"interactive\", \"roundOutcome\"];\n\nconst getNeighbors = a => a;\n\n// initGame should return\nexport const initGame = (players, treatment) => {\n  const game = { rounds: [], players: [] };\n\n  const taskIndexes = _.shuffle(_.range(0, 3));\n\n  _.times(3, i => {\n    game.rounds.push({\n      stages,\n      data: {\n        // This object 100% open, no fields bellow are required\n        input: taskData[taskIndexes[i]].input,\n        taskIndex: taskIndexes[i],\n        randomNumber: 123\n      }\n    });\n  });\n\n  players.forEach(player => {\n    const neighbors = getNeighbors(player, players, 2);\n    game.players.push({\n      ...player,\n      data: {\n        avatar: Random.choice(avatars),\n        neighbors\n      }\n    });\n  });\n\n  return game;\n};\n\n// On each response (all stages)\nexport const computeResponse = (game, round, stage, player, responseData) => {\n  if (reponse.stage === \"initial\" || reponse.stage === \"social\") {\n    return;\n  }\n\n  if (reponse.stage.state === \"done\") {\n    // update user score\n  } else {\n    player.set(\"tempScore\", response.value);\n\n    // update intermediate score var\n    sum = 0;\n    game.players.forEach(element => {\n      sum += player.get(\"tempScore\");\n    });\n\n    game.set(\"tempScore\", sum / game.players.length);\n  }\n\n  task = allMyTasks[responseData.value];\n\n  score = scoreFunction(response.responseData.value, task.correct_answer);\n\n  return score;\n};\n","// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\n","// Import client startup through a single index entry point\n\nimport \"./routes.js\";\n","import { Route, Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\nimport React from \"react\";\n\nimport GameTemp from \"../../ui/games/task/GameTemp\";\n\nconst browserHistory = createBrowserHistory();\nexport const renderRoutes = () => (\n  <Router history={browserHistory}>\n    <div className=\"grid\">\n      <header>\n        <h1>Netwise</h1>\n      </header>\n\n      <main>\n        {/* <Route path=\"/\" component={Home} /> */}\n        <Route path=\"/\" component={GameTemp} />\n      </main>\n\n      <footer>footer</footer>\n    </div>\n  </Router>\n);\n","// Client entry point, imports all client code\n\nimport \"/imports/startup/both\";\nimport \"/imports/startup/client\";\n\nimport { render } from \"react-dom\";\nimport { renderRoutes } from \"../imports/startup/client/routes\";\n\nMeteor.startup(() => {\n  render(renderRoutes(), document.getElementById(\"app\"));\n});\n"]}