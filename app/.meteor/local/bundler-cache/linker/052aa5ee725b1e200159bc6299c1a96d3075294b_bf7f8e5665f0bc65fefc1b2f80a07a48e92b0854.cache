[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar _ = Package.underscore._;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar Boilerplate;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"boilerplate-generator\":{\"generator.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/boilerplate-generator/generator.js                                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  Boilerplate: () => Boilerplate\n});\nlet readFile;\nmodule.watch(require(\"fs\"), {\n  readFile(v) {\n    readFile = v;\n  }\n\n}, 0);\nlet WebBrowserTemplate;\nmodule.watch(require(\"./template-web.browser\"), {\n  default(v) {\n    WebBrowserTemplate = v;\n  }\n\n}, 1);\nlet WebCordovaTemplate;\nmodule.watch(require(\"./template-web.cordova\"), {\n  default(v) {\n    WebCordovaTemplate = v;\n  }\n\n}, 2);\n\n// Copied from webapp_server\nconst readUtf8FileSync = filename => Meteor.wrapAsync(readFile)(filename, 'utf8');\n\nconst identity = value => value;\n\nclass Boilerplate {\n  constructor(arch, manifest, options = {}) {\n    this.template = _getTemplate(arch);\n    this.baseData = null;\n\n    this._generateBoilerplateFromManifest(manifest, options);\n  } // The 'extraData' argument can be used to extend 'self.baseData'. Its\n  // purpose is to allow you to specify data that you might not know at\n  // the time that you construct the Boilerplate object. (e.g. it is used\n  // by 'webapp' to specify data that is only known at request-time).\n\n\n  toHTML(extraData) {\n    if (!this.baseData || !this.template) {\n      throw new Error('Boilerplate did not instantiate correctly.');\n    }\n\n    return \"<!DOCTYPE html>\\n\" + this.template((0, _extends3.default)({}, this.baseData, extraData));\n  } // XXX Exported to allow client-side only changes to rebuild the boilerplate\n  // without requiring a full server restart.\n  // Produces an HTML string with given manifest and boilerplateSource.\n  // Optionally takes urlMapper in case urls from manifest need to be prefixed\n  // or rewritten.\n  // Optionally takes pathMapper for resolving relative file system paths.\n  // Optionally allows to override fields of the data context.\n\n\n  _generateBoilerplateFromManifest(manifest, {\n    urlMapper = identity,\n    pathMapper = identity,\n    baseDataExtension,\n    inline\n  } = {}) {\n    const boilerplateBaseData = (0, _extends3.default)({\n      css: [],\n      js: [],\n      head: '',\n      body: '',\n      meteorManifest: JSON.stringify(manifest)\n    }, baseDataExtension);\n    manifest.forEach(item => {\n      const urlPath = urlMapper(item.url);\n      const itemObj = {\n        url: urlPath\n      };\n\n      if (inline) {\n        itemObj.scriptContent = readUtf8FileSync(pathMapper(item.path));\n        itemObj.inline = true;\n      }\n\n      if (item.type === 'css' && item.where === 'client') {\n        boilerplateBaseData.css.push(itemObj);\n      }\n\n      if (item.type === 'js' && item.where === 'client' && // Dynamic JS modules should not be loaded eagerly in the\n      // initial HTML of the app.\n      !item.path.startsWith('dynamic/')) {\n        boilerplateBaseData.js.push(itemObj);\n      }\n\n      if (item.type === 'head') {\n        boilerplateBaseData.head = readUtf8FileSync(pathMapper(item.path));\n      }\n\n      if (item.type === 'body') {\n        boilerplateBaseData.body = readUtf8FileSync(pathMapper(item.path));\n      }\n    });\n    this.baseData = boilerplateBaseData;\n  }\n\n}\n\n; // Returns a template function that, when called, produces the boilerplate\n// html as a string.\n\nconst _getTemplate = arch => {\n  if (arch === 'web.browser') {\n    return WebBrowserTemplate;\n  } else if (arch === 'web.cordova') {\n    return WebCordovaTemplate;\n  } else {\n    throw new Error('Unsupported arch: ' + arch);\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template-web.browser.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/boilerplate-generator/template-web.browser.js                                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet template;\nmodule.watch(require(\"./template\"), {\n  default(v) {\n    template = v;\n  }\n\n}, 0);\nmodule.exportDefault(function ({\n  meteorRuntimeConfig,\n  rootUrlPathPrefix,\n  inlineScriptsAllowed,\n  css,\n  js,\n  additionalStaticJs,\n  htmlAttributes,\n  bundledJsCssUrlRewriteHook,\n  head,\n  body,\n  dynamicHead,\n  dynamicBody\n}) {\n  return [].concat(['<html' + Object.keys(htmlAttributes || {}).map(key => template(' <%= attrName %>=\"<%- attrValue %>\"')({\n    attrName: key,\n    attrValue: htmlAttributes[key]\n  })).join('') + '>', '<head>'], (css || []).map(({\n    url\n  }) => template('  <link rel=\"stylesheet\" type=\"text/css\" class=\"__meteor-css__\" href=\"<%- href %>\">')({\n    href: bundledJsCssUrlRewriteHook(url)\n  })), [head, dynamicHead, '</head>', '<body>', body, dynamicBody, '', inlineScriptsAllowed ? template('  <script type=\"text/javascript\">__meteor_runtime_config__ = JSON.parse(decodeURIComponent(<%= conf %>))</script>')({\n    conf: meteorRuntimeConfig\n  }) : template('  <script type=\"text/javascript\" src=\"<%- src %>/meteor_runtime_config.js\"></script>')({\n    src: rootUrlPathPrefix\n  }), ''], (js || []).map(({\n    url\n  }) => template('  <script type=\"text/javascript\" src=\"<%- src %>\"></script>')({\n    src: bundledJsCssUrlRewriteHook(url)\n  })), (additionalStaticJs || []).map(({\n    contents,\n    pathname\n  }) => inlineScriptsAllowed ? template('  <script><%= contents %></script>')({\n    contents: contents\n  }) : template('  <script type=\"text/javascript\" src=\"<%- src %>\"></script>')({\n    src: rootUrlPathPrefix + pathname\n  })), ['', '', '</body>', '</html>']).join('\\n');\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template-web.cordova.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/boilerplate-generator/template-web.cordova.js                                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet template;\nmodule.watch(require(\"./template\"), {\n  default(v) {\n    template = v;\n  }\n\n}, 0);\nmodule.exportDefault(function ({\n  meteorRuntimeConfig,\n  rootUrlPathPrefix,\n  inlineScriptsAllowed,\n  css,\n  js,\n  additionalStaticJs,\n  htmlAttributes,\n  bundledJsCssUrlRewriteHook,\n  head,\n  body,\n  dynamicHead,\n  dynamicBody\n}) {\n  return [].concat(['<html>', '<head>', '  <meta charset=\"utf-8\">', '  <meta name=\"format-detection\" content=\"telephone=no\">', '  <meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height\">', '  <meta name=\"msapplication-tap-highlight\" content=\"no\">', '  <meta http-equiv=\"Content-Security-Policy\" content=\"default-src * gap: data: blob: \\'unsafe-inline\\' \\'unsafe-eval\\' ws: wss:;\">'], // We are explicitly not using bundledJsCssUrlRewriteHook: in cordova we serve assets up directly from disk, so rewriting the URL does not make sense\n  (css || []).map(({\n    url\n  }) => template('  <link rel=\"stylesheet\" type=\"text/css\" class=\"__meteor-css__\" href=\"<%- href %>\">')({\n    href: url\n  })), ['  <script type=\"text/javascript\">', template('    __meteor_runtime_config__ = JSON.parse(decodeURIComponent(<%= conf %>));')({\n    conf: meteorRuntimeConfig\n  }), '    if (/Android/i.test(navigator.userAgent)) {', // When Android app is emulated, it cannot connect to localhost,\n  // instead it should connect to 10.0.2.2\n  // (unless we\\'re using an http proxy; then it works!)\n  '      if (!__meteor_runtime_config__.httpProxyPort) {', '        __meteor_runtime_config__.ROOT_URL = (__meteor_runtime_config__.ROOT_URL || \\'\\').replace(/localhost/i, \\'10.0.2.2\\');', '        __meteor_runtime_config__.DDP_DEFAULT_CONNECTION_URL = (__meteor_runtime_config__.DDP_DEFAULT_CONNECTION_URL || \\'\\').replace(/localhost/i, \\'10.0.2.2\\');', '      }', '    }', '  </script>', '', '  <script type=\"text/javascript\" src=\"/cordova.js\"></script>'], (js || []).map(({\n    url\n  }) => template('  <script type=\"text/javascript\" src=\"<%- src %>\"></script>')({\n    src: url\n  })), (additionalStaticJs || []).map(({\n    contents,\n    pathname\n  }) => inlineScriptsAllowed ? template('  <script><%= contents %></script>')({\n    contents: contents\n  }) : template('  <script type=\"text/javascript\" src=\"<%- src %>\"></script>')({\n    src: rootUrlPathPrefix + pathname\n  })), ['', head, '</head>', '', '<body>', body, '</body>', '</html>']).join('\\n');\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/boilerplate-generator/template.js                                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => template\n});\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\n\nfunction template(text) {\n  return _.template(text, null, {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  });\n}\n\n;\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nvar exports = require(\"./node_modules/meteor/boilerplate-generator/generator.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['boilerplate-generator'] = exports, {\n  Boilerplate: Boilerplate\n});\n\n})();\n","servePath":"/packages/boilerplate-generator.js","sourceMap":{"version":3,"sources":["packages/boilerplate-generator/generator.js","packages/boilerplate-generator/template-web.browser.js","packages/boilerplate-generator/template-web.cordova.js","packages/boilerplate-generator/template.js"],"names":["module","export","Boilerplate","readFile","watch","require","v","WebBrowserTemplate","default","WebCordovaTemplate","readUtf8FileSync","filename","Meteor","wrapAsync","identity","value","constructor","arch","manifest","options","template","_getTemplate","baseData","_generateBoilerplateFromManifest","toHTML","extraData","Error","urlMapper","pathMapper","baseDataExtension","inline","boilerplateBaseData","css","js","head","body","meteorManifest","JSON","stringify","forEach","item","urlPath","url","itemObj","scriptContent","path","type","where","push","startsWith","exportDefault","meteorRuntimeConfig","rootUrlPathPrefix","inlineScriptsAllowed","additionalStaticJs","htmlAttributes","bundledJsCssUrlRewriteHook","dynamicHead","dynamicBody","concat","Object","keys","map","key","attrName","attrValue","join","href","conf","src","contents","pathname","_","text","evaluate","interpolate","escape"],"mappings":"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","file":"/packages/boilerplate-generator.js","sourcesContent":["import { readFile } from 'fs';\n\nimport WebBrowserTemplate from './template-web.browser';\nimport WebCordovaTemplate from './template-web.cordova';\n\n// Copied from webapp_server\nconst readUtf8FileSync = filename => Meteor.wrapAsync(readFile)(filename, 'utf8');\n\nconst identity = value => value;\n\nexport class Boilerplate {\n  constructor(arch, manifest, options = {}) {\n    this.template = _getTemplate(arch);\n    this.baseData = null;\n\n    this._generateBoilerplateFromManifest(\n      manifest,\n      options\n    );\n  }\n\n  // The 'extraData' argument can be used to extend 'self.baseData'. Its\n  // purpose is to allow you to specify data that you might not know at\n  // the time that you construct the Boilerplate object. (e.g. it is used\n  // by 'webapp' to specify data that is only known at request-time).\n  toHTML(extraData) {\n    if (!this.baseData || !this.template) {\n      throw new Error('Boilerplate did not instantiate correctly.');\n    }\n\n    return  \"<!DOCTYPE html>\\n\" +\n      this.template({ ...this.baseData, ...extraData });\n  }\n\n  // XXX Exported to allow client-side only changes to rebuild the boilerplate\n  // without requiring a full server restart.\n  // Produces an HTML string with given manifest and boilerplateSource.\n  // Optionally takes urlMapper in case urls from manifest need to be prefixed\n  // or rewritten.\n  // Optionally takes pathMapper for resolving relative file system paths.\n  // Optionally allows to override fields of the data context.\n  _generateBoilerplateFromManifest(manifest, {\n    urlMapper = identity,\n    pathMapper = identity,\n    baseDataExtension,\n    inline,\n  } = {}) {\n\n    const boilerplateBaseData = {\n      css: [],\n      js: [],\n      head: '',\n      body: '',\n      meteorManifest: JSON.stringify(manifest),\n      ...baseDataExtension,\n    };\n\n    manifest.forEach(item => {\n      const urlPath = urlMapper(item.url);\n      const itemObj = { url: urlPath };\n\n      if (inline) {\n        itemObj.scriptContent = readUtf8FileSync(\n          pathMapper(item.path));\n        itemObj.inline = true;\n      }\n\n      if (item.type === 'css' && item.where === 'client') {\n        boilerplateBaseData.css.push(itemObj);\n      }\n\n      if (item.type === 'js' && item.where === 'client' &&\n        // Dynamic JS modules should not be loaded eagerly in the\n        // initial HTML of the app.\n        !item.path.startsWith('dynamic/')) {\n        boilerplateBaseData.js.push(itemObj);\n      }\n\n      if (item.type === 'head') {\n        boilerplateBaseData.head =\n          readUtf8FileSync(pathMapper(item.path));\n      }\n\n      if (item.type === 'body') {\n        boilerplateBaseData.body =\n          readUtf8FileSync(pathMapper(item.path));\n      }\n    });\n\n    this.baseData = boilerplateBaseData;\n  }\n};\n\n// Returns a template function that, when called, produces the boilerplate\n// html as a string.\nconst _getTemplate = arch => {\n  if (arch === 'web.browser') {\n    return WebBrowserTemplate;\n  } else if (arch === 'web.cordova') {\n    return WebCordovaTemplate;\n  } else {\n    throw new Error('Unsupported arch: ' + arch);\n  }\n};\n","import template from './template';\n\n// Template function for rendering the boilerplate html for browsers\nexport default function({\n  meteorRuntimeConfig,\n  rootUrlPathPrefix,\n  inlineScriptsAllowed,\n  css,\n  js,\n  additionalStaticJs,\n  htmlAttributes,\n  bundledJsCssUrlRewriteHook,\n  head,\n  body,\n  dynamicHead,\n  dynamicBody,\n}) {\n  return [].concat(\n    [\n      '<html' + Object.keys(htmlAttributes || {}).map(key =>\n        template(' <%= attrName %>=\"<%- attrValue %>\"')({\n          attrName: key,\n          attrValue: htmlAttributes[key]\n        })\n      ).join('') + '>',\n      '<head>'\n    ],\n\n    (css || []).map(({ url }) =>\n      template('  <link rel=\"stylesheet\" type=\"text/css\" class=\"__meteor-css__\" href=\"<%- href %>\">')({\n        href: bundledJsCssUrlRewriteHook(url)\n      })\n    ),\n\n    [\n      head,\n      dynamicHead,\n      '</head>',\n      '<body>',\n      body,\n      dynamicBody,\n      '',\n      (inlineScriptsAllowed\n        ? template('  <script type=\"text/javascript\">__meteor_runtime_config__ = JSON.parse(decodeURIComponent(<%= conf %>))</script>')({\n          conf: meteorRuntimeConfig\n        })\n        : template('  <script type=\"text/javascript\" src=\"<%- src %>/meteor_runtime_config.js\"></script>')({\n          src: rootUrlPathPrefix\n        })\n      ) ,\n      ''\n    ],\n\n    (js || []).map(({ url }) =>\n      template('  <script type=\"text/javascript\" src=\"<%- src %>\"></script>')({\n        src: bundledJsCssUrlRewriteHook(url)\n      })\n    ),\n\n    (additionalStaticJs || []).map(({ contents, pathname }) => (\n      (inlineScriptsAllowed\n        ? template('  <script><%= contents %></script>')({\n          contents: contents\n        })\n        : template('  <script type=\"text/javascript\" src=\"<%- src %>\"></script>')({\n          src: rootUrlPathPrefix + pathname\n        }))\n    )),\n\n    [\n      '', '',\n      '</body>',\n      '</html>'\n    ],\n  ).join('\\n');\n}\n","import template from './template';\n\n// Template function for rendering the boilerplate html for cordova\nexport default function({\n  meteorRuntimeConfig,\n  rootUrlPathPrefix,\n  inlineScriptsAllowed,\n  css,\n  js,\n  additionalStaticJs,\n  htmlAttributes,\n  bundledJsCssUrlRewriteHook,\n  head,\n  body,\n  dynamicHead,\n  dynamicBody,\n}) {\n  return [].concat(\n    [\n      '<html>',\n      '<head>',\n      '  <meta charset=\"utf-8\">',\n      '  <meta name=\"format-detection\" content=\"telephone=no\">',\n      '  <meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height\">',\n      '  <meta name=\"msapplication-tap-highlight\" content=\"no\">',\n      '  <meta http-equiv=\"Content-Security-Policy\" content=\"default-src * gap: data: blob: \\'unsafe-inline\\' \\'unsafe-eval\\' ws: wss:;\">',\n    ],\n    // We are explicitly not using bundledJsCssUrlRewriteHook: in cordova we serve assets up directly from disk, so rewriting the URL does not make sense\n    (css || []).map(({ url }) =>\n      template('  <link rel=\"stylesheet\" type=\"text/css\" class=\"__meteor-css__\" href=\"<%- href %>\">')({\n        href: url\n      })\n    ),\n    [\n      '  <script type=\"text/javascript\">',\n      template('    __meteor_runtime_config__ = JSON.parse(decodeURIComponent(<%= conf %>));')({\n        conf: meteorRuntimeConfig\n      }),\n      '    if (/Android/i.test(navigator.userAgent)) {',\n      // When Android app is emulated, it cannot connect to localhost,\n      // instead it should connect to 10.0.2.2\n      // (unless we\\'re using an http proxy; then it works!)\n      '      if (!__meteor_runtime_config__.httpProxyPort) {',\n      '        __meteor_runtime_config__.ROOT_URL = (__meteor_runtime_config__.ROOT_URL || \\'\\').replace(/localhost/i, \\'10.0.2.2\\');',\n      '        __meteor_runtime_config__.DDP_DEFAULT_CONNECTION_URL = (__meteor_runtime_config__.DDP_DEFAULT_CONNECTION_URL || \\'\\').replace(/localhost/i, \\'10.0.2.2\\');',\n      '      }',\n      '    }',\n      '  </script>',\n      '',\n      '  <script type=\"text/javascript\" src=\"/cordova.js\"></script>'\n    ],\n    (js || []).map(({ url }) =>\n      template('  <script type=\"text/javascript\" src=\"<%- src %>\"></script>')({\n        src: url\n      })\n    ),\n\n    (additionalStaticJs || []).map(({ contents, pathname }) => (\n      (inlineScriptsAllowed\n        ? template('  <script><%= contents %></script>')({\n          contents: contents\n        })\n        : template('  <script type=\"text/javascript\" src=\"<%- src %>\"></script>')({\n          src: rootUrlPathPrefix + pathname\n        }))\n    )),\n\n    [\n      '',\n      head,\n      '</head>',\n      '',\n      '<body>',\n      body,\n      '</body>',\n      '</html>'\n    ],\n  ).join('\\n');\n}\n","import { _ } from 'meteor/underscore';\n\n// As identified in issue #9149, when an application overrides the default\n// _.template settings using _.templateSettings, those new settings are\n// used anywhere _.template is used, including within the\n// boilerplate-generator. To handle this, _.template settings that have\n// been verified to work are overridden here on each _.template call.\nexport default function template(text) {\n  return _.template(text, null, {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g,\n  });\n};\n"]}}]