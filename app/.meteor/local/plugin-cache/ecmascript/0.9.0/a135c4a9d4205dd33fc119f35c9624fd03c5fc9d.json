{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"./published_document","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PublishedDocument"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/reywood:publish-composite/lib/published_document_list.js","filenameRelative":"packages/reywood:publish-composite/lib/published_document_list.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/reywood:publish-composite/lib/published_document_list.js.map","sourceFileName":"packages/reywood:publish-composite/lib/published_document_list.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"published_document_list"},"ignored":false,"code":"let _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n    _(v) {\n        _ = v;\n    }\n\n}, 0);\nlet PublishedDocument;\nmodule.watch(require(\"./published_document\"), {\n    default(v) {\n        PublishedDocument = v;\n    }\n\n}, 1);\n\nclass PublishedDocumentList {\n    constructor() {\n        this.documents = {};\n    }\n\n    add(collectionName, docId) {\n        const key = valueOfId(docId);\n\n        if (!this.documents[key]) {\n            this.documents[key] = new PublishedDocument(collectionName, docId);\n        }\n    }\n\n    addChildPub(docId, publication) {\n        if (!publication) {\n            return;\n        }\n\n        const key = valueOfId(docId);\n        const doc = this.documents[key];\n\n        if (typeof doc === 'undefined') {\n            throw new Error(`Doc not found in list: ${key}`);\n        }\n\n        this.documents[key].addChildPub(publication);\n    }\n\n    get(docId) {\n        const key = valueOfId(docId);\n        return this.documents[key];\n    }\n\n    remove(docId) {\n        const key = valueOfId(docId);\n        delete this.documents[key];\n    }\n\n    has(docId) {\n        return !!this.get(docId);\n    }\n\n    eachDocument(callback, context) {\n        _.each(this.documents, function execCallbackOnDoc(doc) {\n            callback.call(this, doc);\n        }, context || this);\n    }\n\n    eachChildPub(docId, callback) {\n        const doc = this.get(docId);\n\n        if (doc) {\n            doc.eachChildPub(callback);\n        }\n    }\n\n    getIds() {\n        const docIds = [];\n        this.eachDocument(doc => {\n            docIds.push(doc.docId);\n        });\n        return docIds;\n    }\n\n    unflagForRemoval(docId) {\n        const doc = this.get(docId);\n\n        if (doc) {\n            doc.unflagForRemoval();\n        }\n    }\n\n    flagAllForRemoval() {\n        this.eachDocument(doc => {\n            doc.flagForRemoval();\n        });\n    }\n\n}\n\nfunction valueOfId(docId) {\n    if (docId === null) {\n        throw new Error('Document ID is null');\n    }\n\n    if (typeof docId === 'undefined') {\n        throw new Error('Document ID is undefined');\n    }\n\n    return docId.valueOf();\n}\n\nmodule.exportDefault(PublishedDocumentList);","map":{"version":3,"sources":["packages/reywood:publish-composite/lib/published_document_list.js"],"names":["_","module","watch","require","v","PublishedDocument","default","PublishedDocumentList","constructor","documents","add","collectionName","docId","key","valueOfId","addChildPub","publication","doc","Error","get","remove","has","eachDocument","callback","context","each","execCallbackOnDoc","call","eachChildPub","getIds","docIds","push","unflagForRemoval","flagAllForRemoval","flagForRemoval","valueOf","exportDefault"],"mappings":"AAAA,IAAIA,CAAJ;;AAAMC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACH,MAAEI,CAAF,EAAI;AAACJ,YAAEI,CAAF;AAAI;;AAAV,CAA1C,EAAsD,CAAtD;AAAyD,IAAIC,iBAAJ;AAAsBJ,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACG,YAAQF,CAAR,EAAU;AAACC,4BAAkBD,CAAlB;AAAoB;;AAAhC,CAA7C,EAA+E,CAA/E;;AAKrF,MAAMG,qBAAN,CAA4B;AACxBC,kBAAc;AACV,aAAKC,SAAL,GAAiB,EAAjB;AACH;;AAEDC,QAAIC,cAAJ,EAAoBC,KAApB,EAA2B;AACvB,cAAMC,MAAMC,UAAUF,KAAV,CAAZ;;AAEA,YAAI,CAAC,KAAKH,SAAL,CAAeI,GAAf,CAAL,EAA0B;AACtB,iBAAKJ,SAAL,CAAeI,GAAf,IAAsB,IAAIR,iBAAJ,CAAsBM,cAAtB,EAAsCC,KAAtC,CAAtB;AACH;AACJ;;AAEDG,gBAAYH,KAAZ,EAAmBI,WAAnB,EAAgC;AAC5B,YAAI,CAACA,WAAL,EAAkB;AAAE;AAAS;;AAE7B,cAAMH,MAAMC,UAAUF,KAAV,CAAZ;AACA,cAAMK,MAAM,KAAKR,SAAL,CAAeI,GAAf,CAAZ;;AAEA,YAAI,OAAOI,GAAP,KAAe,WAAnB,EAAgC;AAC5B,kBAAM,IAAIC,KAAJ,CAAW,0BAAyBL,GAAI,EAAxC,CAAN;AACH;;AAED,aAAKJ,SAAL,CAAeI,GAAf,EAAoBE,WAApB,CAAgCC,WAAhC;AACH;;AAEDG,QAAIP,KAAJ,EAAW;AACP,cAAMC,MAAMC,UAAUF,KAAV,CAAZ;AACA,eAAO,KAAKH,SAAL,CAAeI,GAAf,CAAP;AACH;;AAEDO,WAAOR,KAAP,EAAc;AACV,cAAMC,MAAMC,UAAUF,KAAV,CAAZ;AACA,eAAO,KAAKH,SAAL,CAAeI,GAAf,CAAP;AACH;;AAEDQ,QAAIT,KAAJ,EAAW;AACP,eAAO,CAAC,CAAC,KAAKO,GAAL,CAASP,KAAT,CAAT;AACH;;AAEDU,iBAAaC,QAAb,EAAuBC,OAAvB,EAAgC;AAC5BxB,UAAEyB,IAAF,CAAO,KAAKhB,SAAZ,EAAuB,SAASiB,iBAAT,CAA2BT,GAA3B,EAAgC;AACnDM,qBAASI,IAAT,CAAc,IAAd,EAAoBV,GAApB;AACH,SAFD,EAEGO,WAAW,IAFd;AAGH;;AAEDI,iBAAahB,KAAb,EAAoBW,QAApB,EAA8B;AAC1B,cAAMN,MAAM,KAAKE,GAAL,CAASP,KAAT,CAAZ;;AAEA,YAAIK,GAAJ,EAAS;AACLA,gBAAIW,YAAJ,CAAiBL,QAAjB;AACH;AACJ;;AAEDM,aAAS;AACL,cAAMC,SAAS,EAAf;AAEA,aAAKR,YAAL,CAAmBL,GAAD,IAAS;AACvBa,mBAAOC,IAAP,CAAYd,IAAIL,KAAhB;AACH,SAFD;AAIA,eAAOkB,MAAP;AACH;;AAEDE,qBAAiBpB,KAAjB,EAAwB;AACpB,cAAMK,MAAM,KAAKE,GAAL,CAASP,KAAT,CAAZ;;AAEA,YAAIK,GAAJ,EAAS;AACLA,gBAAIe,gBAAJ;AACH;AACJ;;AAEDC,wBAAoB;AAChB,aAAKX,YAAL,CAAmBL,GAAD,IAAS;AACvBA,gBAAIiB,cAAJ;AACH,SAFD;AAGH;;AA5EuB;;AA+E5B,SAASpB,SAAT,CAAmBF,KAAnB,EAA0B;AACtB,QAAIA,UAAU,IAAd,EAAoB;AAChB,cAAM,IAAIM,KAAJ,CAAU,qBAAV,CAAN;AACH;;AACD,QAAI,OAAON,KAAP,KAAiB,WAArB,EAAkC;AAC9B,cAAM,IAAIM,KAAJ,CAAU,0BAAV,CAAN;AACH;;AACD,WAAON,MAAMuB,OAAN,EAAP;AACH;;AA5FDlC,OAAOmC,aAAP,CA8Fe7B,qBA9Ff","file":"packages/reywood:publish-composite/lib/published_document_list.js.map","sourcesContent":["import { _ } from 'meteor/underscore';\n\nimport PublishedDocument from './published_document';\n\n\nclass PublishedDocumentList {\n    constructor() {\n        this.documents = {};\n    }\n\n    add(collectionName, docId) {\n        const key = valueOfId(docId);\n\n        if (!this.documents[key]) {\n            this.documents[key] = new PublishedDocument(collectionName, docId);\n        }\n    }\n\n    addChildPub(docId, publication) {\n        if (!publication) { return; }\n\n        const key = valueOfId(docId);\n        const doc = this.documents[key];\n\n        if (typeof doc === 'undefined') {\n            throw new Error(`Doc not found in list: ${key}`);\n        }\n\n        this.documents[key].addChildPub(publication);\n    }\n\n    get(docId) {\n        const key = valueOfId(docId);\n        return this.documents[key];\n    }\n\n    remove(docId) {\n        const key = valueOfId(docId);\n        delete this.documents[key];\n    }\n\n    has(docId) {\n        return !!this.get(docId);\n    }\n\n    eachDocument(callback, context) {\n        _.each(this.documents, function execCallbackOnDoc(doc) {\n            callback.call(this, doc);\n        }, context || this);\n    }\n\n    eachChildPub(docId, callback) {\n        const doc = this.get(docId);\n\n        if (doc) {\n            doc.eachChildPub(callback);\n        }\n    }\n\n    getIds() {\n        const docIds = [];\n\n        this.eachDocument((doc) => {\n            docIds.push(doc.docId);\n        });\n\n        return docIds;\n    }\n\n    unflagForRemoval(docId) {\n        const doc = this.get(docId);\n\n        if (doc) {\n            doc.unflagForRemoval();\n        }\n    }\n\n    flagAllForRemoval() {\n        this.eachDocument((doc) => {\n            doc.flagForRemoval();\n        });\n    }\n}\n\nfunction valueOfId(docId) {\n    if (docId === null) {\n        throw new Error('Document ID is null');\n    }\n    if (typeof docId === 'undefined') {\n        throw new Error('Document ID is undefined');\n    }\n    return docId.valueOf();\n}\n\nexport default PublishedDocumentList;\n"]},"hash":"a135c4a9d4205dd33fc119f35c9624fd03c5fc9d"}
